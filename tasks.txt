У вас есть размеченная выборка из 100 тыс. объектов: 90 тыс. относится к классу "0", 10 тыс. к классу "1". Ваша модель
выдает метки классов. Вы запустили ее на тестовом наборе данных, который состоял из части размеченной выборки, а именно
из 10 тыс. объектов класса "1" и 10 тыс. случайных объектов класса "0".
Вы получили следующее метрики качества: recall = 0.9, precision = 0.9

Каким было бы качество (recall и precision), если бы вы проверяли его на всей выборке из 100 тыс. объектов?
Ответ запишите через пробел, округлив до одного знака после точки. На первом месте напишите recall, далее precision.
Например, "0.2 0.1" будет обозначать recall = 0.2, precision = 0.1.

На доску выписывают нули и единицы. Первые два числа – это 1 и 0. Вероятность того, что следующее написанное число будет
 1, равна доле единиц среди уже выписанных чисел. Например, третье число будет 1 с вероятностью 1/2. Какова вероятность,
  что среди 100 чисел будет ровно 50 единиц?
Ответ округлите до четвертого знака после точки.

Коля хочет собрать друзей у себя, чтобы решить, куда они поедут отдыхать в выходные. В компании Коли полная демократия,
решение принимается большинством голосов. Cреди друзей есть очень ленивые люди, и они доверили свой голос кому-то из
компании.
Каждый написал Коле промежутки времени, когда он сможет явиться в единую точку голосования и сколько людей ему доверили
проголосовать за них. Друзья у Коли работают очень слаженно и могут принять решение за очень маленький промежуток
времени, даже когда один из них только явился на встречу, а второй уже будет уходить.
Помогите Коле понять, какое максимальное количество голосов он сможет собрать, если выберет оптимальное время.
На вход подается файл, где в первой строке написано количество друзей, от которых поступила информация.
В каждой следующей строке имеется информация про одного друга Коли через пробел: время, когда он сможет прийти, время,
когда ему нужно будет уходить, сколько другей доверили ему свой голос. Все числа целые, неотрицательные и меньше 32 767.
На выходе нужно вывести максимальное количество голосов, которое сможет собрать Коля, выбрав оптимальное время.
Постарайтесь, чтобы решение работало за линейное время.

lines = open('input.txt').readlines()
n = int(lines[0])
allVotes = [0] * 32767
for i in range(1, n + 1):
    split = lines[i].split(' ')
    start = int(split[0])
    end = int(split[1])
    votes = int(split[2]) + 1
    for j in range(start, end + 1):
        allVotes[j] = allVotes[j] + votes
maxVotes = 0
for i in allVotes:
    maxVotes = max(maxVotes, i)
print(maxVotes)